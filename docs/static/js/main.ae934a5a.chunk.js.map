{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","cat","type","value","placeholder","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loanding","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAehD,OACE,mCACE,qBAAKC,UAAU,YAAf,SACE,sBAAMC,SAZS,SAACC,GACpBA,EAAEC,iBAEEL,EAAWM,OAAOC,OAAS,IAC7BT,GAAc,SAACU,GAAD,OAAUR,GAAV,mBAAyBQ,OACvCP,EAAc,MAOZ,SACE,uBACEQ,KAAK,OACLC,MAAOV,EACPW,YAAY,kBACZC,SArBgB,SAACR,GACzBH,EAAcG,EAAES,OAAOH,iB,+BCNdI,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIHI,MAAMF,GAJH,cAIfG,EAJe,gBAKEA,EAAIC,OALN,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXjB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACnC,OACE,qBAAKf,UAAU,2CAAf,SACE,qBAAK6B,IAAKd,EAAKe,IAAKL,OCDbM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCuB,KAAM,GACNY,UAAU,IAH4B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRvB,EAAQC,GAAUuB,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPd,KAAMiB,EACNL,UAAU,MAEX,UAEJ,CAACnB,IAEGoB,EDf4BM,CAAa1B,GAAlCa,EADyB,EAC/BN,KAAcY,EADiB,EACjBA,SAEtB,OACE,qCACE,oBAAIhC,UAAU,sCAAd,SAAqDa,IACpDmB,GAAY,mBAAGhC,UAAU,mCAAb,sBACb,qBAAKA,UAAU,YAAf,SACG0B,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aETnBgB,EAAe,WAAO,IAAD,EACI3C,mBAAS,CAAC,gBADd,mBACzB4C,EADyB,KACb7C,EADa,KAGhC,OACE,qCACE,oBAAII,UAAU,sCAAd,oBACA,cAAC,EAAD,CAAaJ,cAAeA,IAE5B,6BACG6C,EAAWnB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCRxB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ae934a5a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((cat) => [inputValue, ...cat]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={inputValue}\n            placeholder=\"Ej: Dragon Ball\"\n            onChange={handleInputChange}\n          />\n        </form>\n      </div>\n    </>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=12&api_key=HCdrP9vvwssYyO88SQPAi19pQ6yWjPDF`;\n  const res = await fetch(url);\n  const { data } = await res.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from \"react\";\n\nexport const GifGridItem = ({ title, url }) => {\n  return (\n    <div className=\"card animate__animated animate__fadeInUp\">\n      <img src={url} alt={title} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  const { data: images, loanding } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeInUp\">{category}</h3>\n      {loanding && <p className=\"animate__animated animate__flash\">loanding</p>}\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../helpers/GetGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loanding: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setTimeout(() => {\n        setState({\n          data: imgs,\n          loanding: false,\n        });\n      }, 2000);\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"Dragon Ball\"]);\n\n  return (\n    <>\n      <h1 className=\"animate__animated animate__fadeInUp\">GifApp</h1>\n      <AddCategory setCategories={setCategories} />\n\n      <ol>\n        {categories.map((category) => (\n          <GifGrid key={category} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}